#+TITLE: Static Documentation
#+AUTHOR: Ray Perry
#+EMAIL: rperry@pmmimediagroup.com
#+DATE: <2017-09-13 Wed>

* Root Documentation
** .gitignore
 #+BEGIN_SRC text :tangle ../.gitignore
 node_modules/
 .DS_Store
 dist/
 yarn-error.log
 #*#
 #+END_SRC

** README
 #+BEGIN_SRC text :tangle ../README.md
 # Media Center

 ## Foreword
 Media Center is a web server that displays interactive tiles and panels for large displays. This originally supposed to be spun up during Pack Expo and other events.

 ## Introduction

 ### Abstract
 After the server starts up, we rebuild the cache/database from a file and serve the webpage and its data back to the main view.

 This project is built on a few technologies:
 - [Node.js](http://nodejs.org)
 - [TypeScript](http://typescriptlang.org)
 - [Webpack](https://webpack.js.org/)
 - Vue.js ecosystem ([Vue](http://vuejs.org), [Vuex](https://vuex.vuejs.org/en/), [Vue-Router](https://router.vuejs.org/en/))
 - A transition library

 ## Getting started
 ```
 git clone <repo>
 npm install
 npm start
 ```

 ## Troubleshooting

 ## Contact info
 #+END_SRC
* Specific Documentation
** DEV-README
#+BEGIN_SRC text :tangle DEV-README.md
# To the next dev:

Hello, friend!
If you're reading this, congratulations! You've earned a crash course into Emacs and Org-Mode. You never wanted it but you got it anyway.

I'd like to take this time and explain this directory to you. This is the underground brain of the repository. I am a die-hard emacsen (someone who uses Emacs) and all of these .org files are alive. Each one is an example of literate programming and if you're reading this in Emacs, these code blocks should be doing all sorts of stuff right now. Activating `org-babel-tangle` on these files will rebuild the documentation across the repo. The Webpack configurations are also in there and are the reason I'm writing this README.

Few rules about Lisp:
- Everything is a list. This means your code is your prose and vice-versa.
- The first operator in a set of parentheses is treated like a function.
```elisp
;; Functions
(+ 1 2)
(if obj1 obj2)
(string= "string1" "string2")

;; Variables/Atoms
1
2
obj1
obj2
"string1"
"string2"
```
- Lisp will evaluate everything unless you tell it otherwise.

With that said, the Webpack configurations have a list of settings at the top of the file.
Just change the string values and tangle the file. Everything should just work out. :)
#+END_SRC
